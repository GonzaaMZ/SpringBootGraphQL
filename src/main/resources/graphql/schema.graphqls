
# Query - Utilizado unicamente para realizar consultas
type Query {
    # Students
    findStudentById(studentId: String) : Student,
    findAllStudents: [Student]

    #Courses
    findCourseById(courseId: String) : Course,
    findAllCourses : [Course]
}

type Mutation {
    # Students
    createStudent(inputStudent: InputStudent!) : Student,
    deleteStudent(studentId: String) : String

    # Courses
    createCourse(inputCourse: InputCourse!) : Course,
    deleteCourse(courseId: String) : String
}

type Student {
    id: ID,
    name: String,
    lastName: String,
    age: Int,
    course: Course
}

input InputStudent {
    name: String,
    lastName: String,
    age: Int,
    courseId: String!
}

type Course {
    id: ID,
    name: String,
    category: String,
    teacher: String,
    students: [Student]
}

input InputCourse {
    name: String,
    category: String,
    teacher: String
}